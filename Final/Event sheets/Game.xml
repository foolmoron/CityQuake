<?xml version="1.0" encoding="utf-8" ?>
<c2eventsheet>
    <!--All the 'name' attributes are ignored by Construct 2 - they are there for readability only.-->
    <name>Game</name>
    <events>
        <include>Buttons</include>
        <variable comment="Debug text that can be set via javascript" constant="0" name="DEBUG" sid="71" static="0" type="text">&quot;//&quot;</variable>
        <variable comment="Level description" constant="0" name="DESCRIPTION" sid="270" static="0" type="text">&quot;Name: &quot;</variable>
        <variable comment="Level name" constant="0" name="LEVELNAME" sid="394" static="0" type="text">LEVEL NAME</variable>
        <variable comment="Current high score" constant="0" name="HIGHSCORE" sid="464" static="0" type="number">0</variable>
        <variable constant="0" name="x" sid="72" static="0" type="number">0</variable>
        <event-block sid="73">
            <conditions>
                <condition id="-2" name="On start of layout" sid="74" type="System" />
            </conditions>
            <actions>
                <action id="4" name="Preload" sid="192" type="Audio">
                    <param id="0" name="Audio file">EpicityByXenogenocide</param>
                </action>
                <action id="4" name="Preload" sid="189" type="Audio">
                    <param id="0" name="Audio file">EpicityByXenogenocideSlowmo</param>
                </action>
                <action id="4" name="Preload" sid="191" type="Audio">
                    <param id="0" name="Audio file">SmoothBossaNovaByTombor911</param>
                </action>
                <action id="4" name="Initialize" sid="140" type="CityQuakeLevels" />
                <action id="-9" name="Set value" sid="465" type="System">
                    <param id="0" name="Variable">HIGHSCORE</param>
                    <param id="1" name="Value">WebStorage.LocalValue(&quot;highscore&quot; &amp; str(CityQuakeLevels.CurrentLevelID)) = &quot;&quot; ? 0 : WebStorage.LocalValue(&quot;highscore&quot; &amp; str(CityQuakeLevels.CurrentLevelID))</param>
                </action>
                <action id="-16" name="Set opacity" sid="488" type="Button">
                    <param id="0" name="Opacity">Button.StringParameter = &quot;NextLevelButton&quot; ? ((CityQuakeLevels.CurrentLevelID + 1)  &lt;= int(WebStorage.LocalValue(&quot;levelprogress&quot;)) ? 100 : 50) : 100</param>
                </action>
                <action id="0" name="Set text" sid="505" type="HighScore">
                    <param id="0" name="Text">Function.Call(&quot;ScoreToString&quot;, HIGHSCORE)</param>
                </action>
            </actions>
        </event-block>
        <event-block sid="107">
            <conditions>
                <condition id="10" name="On Nth touch start" sid="108" type="Touch">
                    <param id="0" name="Touch number">0</param>
                </condition>
                <condition id="-8" name="Compare two values" sid="391" type="System">
                    <param id="0" name="First value">LevelName.Count</param>
                    <param id="1" name="Comparison">0</param>
                    <param id="2" name="Second value">0</param>
                </condition>
            </conditions>
            <actions />
            <sub-events>
                <event-block sid="373">
                    <conditions>
                        <condition id="-8" name="Compare two values" sid="374" type="System">
                            <param id="0" name="First value">timescale</param>
                            <param id="1" name="Comparison">0</param>
                            <param id="2" name="Second value">0</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="5" name="Start angle adjustment" sid="115" type="CityQuakeLevels">
                            <param id="0" name="X">CanvasToLayerX(3, Touch.AbsoluteX, Touch.AbsoluteY)</param>
                            <param id="1" name="Y">CanvasToLayerY(3, Touch.AbsoluteX, Touch.AbsoluteY)</param>
                        </action>
                    </actions>
                </event-block>
            </sub-events>
        </event-block>
        <event-block sid="77">
            <conditions>
                <condition id="12" name="Has Nth touch" sid="78" type="Touch">
                    <param id="0" name="Touch number">0</param>
                </condition>
                <condition id="-8" name="Compare two values" sid="392" type="System">
                    <param id="0" name="First value">LevelName.Count</param>
                    <param id="1" name="Comparison">0</param>
                    <param id="2" name="Second value">0</param>
                </condition>
            </conditions>
            <actions>
                <action id="3" name="Update indicators" sid="79" type="CityQuakeLevels">
                    <param id="0" name="X">CanvasToLayerX(3, Touch.AbsoluteX, Touch.AbsoluteY)</param>
                    <param id="1" name="Y">CanvasToLayerY(3, Touch.AbsoluteX, Touch.AbsoluteY)</param>
                </action>
            </actions>
        </event-block>
        <event-block sid="80">
            <conditions>
                <condition id="11" name="On Nth touch end" sid="81" type="Touch">
                    <param id="0" name="Touch number">0</param>
                </condition>
                <condition id="-8" name="Compare two values" sid="393" type="System">
                    <param id="0" name="First value">LevelName.Count</param>
                    <param id="1" name="Comparison">0</param>
                    <param id="2" name="Second value">0</param>
                </condition>
            </conditions>
            <actions>
                <action id="2" name="Spawn earthquake" sid="82" type="CityQuakeLevels">
                    <param id="0" name="X">CanvasToLayerX(1, Touch.AbsoluteX, Touch.AbsoluteY)</param>
                    <param id="1" name="Y">CanvasToLayerY(1, Touch.AbsoluteX, Touch.AbsoluteY)</param>
                </action>
            </actions>
        </event-block>
        <event-block sid="83">
            <conditions>
                <condition id="-1" name="Every tick" sid="84" type="System" />
            </conditions>
            <actions>
                <action id="0" name="Set text" sid="85" type="Debug">
                    <param id="0" name="Text">&quot;BUILDINGS: &quot; &amp; CityQuakeLevels.RemainingBuildings &amp; newline &amp; &quot;QUAKES: &quot; &amp; CityQuakeLevels.RemainingEarthquakes &amp; newline &amp; &quot;HIGH: &quot; &amp; HIGHSCORE &amp; newline &amp; &quot;SCORE: &quot; &amp; CityQuakeLevels.Score</param>
                </action>
                <action id="0" name="Set text" sid="269" type="Description">
                    <param id="0" name="Text">DESCRIPTION</param>
                </action>
                <action id="0" name="Set text" sid="395" type="LevelName">
                    <param id="0" name="Text">LEVELNAME</param>
                </action>
                <action id="0" name="Set text" sid="506" type="Score">
                    <param id="0" name="Text">Function.Call(&quot;ScoreToString&quot;, CityQuakeLevels.Score)</param>
                </action>
            </actions>
        </event-block>
        <event-block sid="86">
            <conditions>
                <condition id="0" name="On collision with another object" sid="87" type="Earthquake">
                    <param id="0" name="Object">Earthquake</param>
                </condition>
            </conditions>
            <actions>
                <action behavior="CQEarthquake" id="0" name="Create Object Between" sid="88" type="Earthquake">
                    <param id="0" name="Type">FaultIndicator</param>
                </action>
            </actions>
        </event-block>
        <event-block sid="454">
            <conditions>
                <condition id="1" name="On win" sid="455" type="CityQuakeLevels" />
            </conditions>
            <actions>
                <action id="0" name="Set local value" sid="489" type="WebStorage">
                    <param id="0" name="Key">&quot;levelprogress&quot;</param>
                    <param id="1" name="Value">(CityQuakeLevels.CurrentLevelID + 1) &gt; int(WebStorage.SessionValue(&quot;levelprogress&quot;)) ? (CityQuakeLevels.CurrentLevelID + 1) : WebStorage.SessionValue(&quot;levelprogress&quot;)</param>
                </action>
                <action id="-16" name="Set opacity" sid="490" type="Button">
                    <param id="0" name="Opacity">Button.StringParameter = &quot;NextLevelButton&quot; ? ((CityQuakeLevels.CurrentLevelID + 1)  &lt;= int(WebStorage.LocalValue(&quot;levelprogress&quot;)) ? 100 : 50) : 100</param>
                </action>
            </actions>
            <sub-events>
                <event-block sid="466">
                    <conditions>
                        <condition id="-14" name="Compare variable" sid="467" type="System">
                            <param id="0" name="Variable">HIGHSCORE</param>
                            <param id="1" name="Comparison">3</param>
                            <param id="2" name="Value">CityQuakeLevels.Score</param>
                        </condition>
                    </conditions>
                    <actions>
                        <action id="0" name="Set local value" sid="468" type="WebStorage">
                            <param id="0" name="Key">&quot;highscore&quot; &amp; str(CityQuakeLevels.CurrentLevelID)</param>
                            <param id="1" name="Value">CityQuakeLevels.Score</param>
                        </action>
                        <action behavior="Fade" id="1" name="Start fade" sid="469" type="NewHigh" />
                    </actions>
                </event-block>
            </sub-events>
        </event-block>
        <event-block sid="456">
            <conditions>
                <condition id="0" name="On lose" sid="457" type="CityQuakeLevels" />
            </conditions>
            <actions>
                <action behavior="Fade" id="1" name="Start fade" sid="473" type="RetryText" />
            </actions>
        </event-block>
        <event-block sid="461">
            <conditions>
                <condition behavior="Fade" id="0" name="On fade out finished" sid="462" type="NewHigh" />
            </conditions>
            <actions>
                <action behavior="Fade" id="0" name="Restart fade" sid="463" type="NewHigh" />
                <action behavior="Fade" id="0" name="Restart fade" sid="504" type="Score" />
            </actions>
        </event-block>
        <event-block sid="478">
            <conditions>
                <condition id="0" name="On key pressed" sid="479" type="Keyboard">
                    <param id="0" name="Key">82 (R)</param>
                </condition>
            </conditions>
            <actions>
                <action id="0" name="Call function" sid="480" type="Function">
                    <param id="0" name="Name">&quot;RetryLevel&quot;</param>
                    <param id="1" name="Parameter {n}"></param>
                </action>
            </actions>
        </event-block>
        <event-block sid="507">
            <conditions>
                <condition id="0" name="On function" sid="508" type="Function">
                    <param id="0" name="Name">&quot;ScoreToString&quot;</param>
                </condition>
            </conditions>
            <actions>
                <action id="1" name="Set return value" sid="509" type="Function">
                    <param id="0" name="Value">((Function.Param(0) &gt;= 10000000) ? &quot;&quot; : (Function.Param(0) &gt;= 1000000) ? &quot;0&quot; : (Function.Param(0) &gt;= 100000) ? &quot;00&quot; : (Function.Param(0) &gt;= 10000) ? &quot;000&quot; :  (Function.Param(0) &gt;= 1000) ? &quot;0000&quot; : (Function.Param(0) &gt;= 100) ? &quot;00000&quot; : (Function.Param(0) &gt;= 10) ? &quot;000000&quot; : &quot;0000000&quot; ) &amp; Function.Param(0)</param>
                </action>
            </actions>
        </event-block>
    </events>
</c2eventsheet>
